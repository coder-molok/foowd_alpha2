<?xml version="1.0" encoding="UTF-8"?>
<database name="foowd_api" defaultIdMethod="native">	
	<table name="offer" phpName="Offer">
        <column name="id" phpName="Id" type="INTEGER" required="true" primaryKey="true" autoIncrement="true"/>
        <column name="name" phpName="Name" type="VARCHAR" size="255" required="true" />
        <column name="description" phpName="Description" type="VARCHAR" size="1700" required="true" />
        <column name="publisher" phpName="Publisher" type="INTEGER" required="true"/>
        <!-- con size 10 vuol dire 10 numeri in totale, pertanto fino a 8 cifre per la parte intera + 2 cifre per la decimale -->
        <column name="price" phpName="Price" type="DECIMAL" size="10" scale="2" phpType="double" required="true"/>
        <column name="minqt" phpName="Minqt" type="DECIMAL" size="8" scale="3" phpType="double" required="true"/>
        <column name="maxqt" phpName="Maxqt" type="DECIMAL" size="8" scale="3" phpType="double" required="false"/>
        <column name="quota" phpName="Quota" type="DECIMAL" size="8" scale="3" phpType="double" required="true"/>
        <column name="unit"  phpName="Unit"  type="VARCHAR" size="20" required="true" />
        <column name="unitextra"  phpName="UnitExtra"  type="VARCHAR" size="30" required="false" />
        <!-- defaultExpr="CURRENT_TIMESTAMP" rimosso per precauzione -->
        <column name="created" phpName="Created" type="TIMESTAMP"  required="false"/>
        <column name="modified" phpName="Modified" type="TIMESTAMP" required="false"/>
        <column name="expiration" phpName="Expiration" type="TIMESTAMP" required="false"/>
        <!-- aggiunto -->
        <column name="state" phpName="State" type="VARCHAR" size="10" defaultValue="open" required="false"/>
        <foreign-key foreignTable="user">
            <reference local="publisher" foreign="id"/>
        </foreign-key>
        <behavior name="validate">
            <parameter name="state" value="{column: state, validator: PropelFoowd, options: {type: enum, list:'open, close'}}" />
            <parameter name="price" value="{column: price, validator: PropelFoowd, options: {type: isCash}}" />
            <parameter name="minqt" value="{column: minqt, validator: PropelFoowd, options: {type: isQt}}" />
            <parameter name="maxqt" value="{column: maxqt, validator: PropelFoowd, options: {type: isQt}}" />
        </behavior>
    </table>
    <table name="prefer" phpName="Prefer">
        <column name="id" phpName="Id" type="INTEGER" required="true" primaryKey="true" autoIncrement="true"/>
        <column name="userid" phpName="UserId" type="INTEGER"/>
        <column name="offerid" phpName="OfferId" type="INTEGER"/>
        <column name="created" phpName="Created" type="TIMESTAMP"/>
        <column name="qt" phpName="Qt" type="INTEGER" phpType="double" required="false"/>
        <column name="state" phpName="State" type="VARCHAR" size="10" defaultValue="newest" required="false"/>
        <!-- lego le chiavi -->
        <!-- onDelete="cascade": se elimino una riga da una foreign Table, allora viene eliminata anche nella presente tabella (prefer) -->
        <foreign-key foreignTable="offer" onDelete="cascade">
            <reference local="offerid" foreign="id"/>
        </foreign-key>
        <foreign-key foreignTable="user" onDelete="cascade">
            <reference local="userid" foreign="id"/>
        </foreign-key>
        <behavior name="validate">
            <parameter name="Qt" value="{column: qt, validator: NotBlank}" />
            <parameter name="State" value="{column: state, validator: PropelFoowd, options: {type: enum, list:'newest,pending,solved'}}" />
        </behavior>
    </table>
    <table name="purchase" phpName="Purchase">
        <column name="id" phpName="Id" type="INTEGER" required="true" primaryKey="true" autoIncrement="true"/>
        <column name="offerid" phpName="OfferId" type="INTEGER"/>
        <column name="leaderid" phpName="LeaderId" type="INTEGER"/>
        <column name="created" phpName="Created" type="TIMESTAMP"/>
        <column name="modifed" phpName="Modified" type="TIMESTAMP"/>
        <column name="state" phpName="State" type="VARCHAR" size="11" defaultValue="opened" required="false"/>
        <!-- lego le chiavi -->
        <!-- onDelete="cascade": se elimino una riga da una foreign Table, allora viene eliminata anche nella presente tabella (prefer) -->
        <foreign-key foreignTable="offer">
            <reference local="offerid" foreign="id"/>
        </foreign-key>
        <foreign-key foreignTable="user">
            <reference local="leaderid" foreign="id"/>
        </foreign-key>
        <behavior name="validate">
            <parameter name="PurchaseState" value="{column: state, validator: PropelFoowd, options: {type: enum, list:'opened,pending,solved,troublesome,delivering'}}" />
        </behavior>
    </table>
    <!-- relazione molti a molti -->
    <table name="purchase_prefer" isCrossRef="true">
        <column name="purchaseid" phpName="PurchaseId" type="integer" primaryKey="true"/>
        <column name="preferid" phpName="PreferId" type="integer" primaryKey="true"/>
        <!-- onDelete necessario per sfruttare le potenzialita' di propel  -->
        <!-- se elimino un purchased allora vengono eliminati i sui rispettivi valori in purchase_prefer, ma non vengono eliminate le preferenze!-->
        <!-- questo perche' onDelete="cascade": se elimini qualcosa dalla foreignTable, allora i rispetivi campi li elimini da questa tabella di join. Non vale il contrario. -->
        <foreign-key foreignTable="purchase" onDelete="cascade">
            <reference local="purchaseid" foreign="id"/>
        </foreign-key>
        <foreign-key foreignTable="prefer" onDelete="cascade">
            <reference local="preferid" foreign="id"/>
        </foreign-key>
    </table>
    <table name="tag" phpName="Tag">
        <column name="id" phpName="Id" type="INTEGER" required="true" primaryKey="true" autoIncrement="true"/>
        <column name="name" phpName="Name" type="VARCHAR" size="255" required="true" />
    </table>
    <!-- relazione molti a molti -->
    <table name="offer_tag" isCrossRef="true">
        <column name="offerid" phpName="OfferId" type="integer" primaryKey="true"/>
        <column name="tagid" phpName="TagId" type="integer" primaryKey="true"/>
        <foreign-key foreignTable="offer" onDelete="cascade">
            <reference local="offerid" foreign="id"/>
        </foreign-key>
        <foreign-key foreignTable="tag" onDelete="cascade">
            <reference local="tagid" foreign="id"/>
        </foreign-key>
    </table>
    <table name="user" phpName="User">
        <column name="id" phpName="Id" type="INTEGER" required="true" primaryKey="true" autoIncrement="true"/>
        <column name="name" phpName="Name" type="VARCHAR" size="255" required="true" />
        <column name="genre" phpName="Genre" type="VARCHAR" size="10" required="true" />
        <column name="externalid" phpName="ExternalId" type="INTEGER" required="true"/>
        <column name="location" phpName="Location" type="VARCHAR" size="255" required="false" />
        <column name="description" phpName="Description" type="VARCHAR" size="2000" required="false" />
        <column name="site" phpName="Site" type="VARCHAR" size="255" required="false" />
        <column name="piva" phpName="Piva" type="VARCHAR" size="11" required="false" />
        <column name="email" phpName="Email" type="VARCHAR" size="50" required="false" />
        <column name="phone" phpName="Phone" type="VARCHAR" size="15" required="false" />
        <column name="address" phpName="Address" type="VARCHAR" size="150" required="false" />
        <column name="company" phpName="Company" type="VARCHAR" size="100" required="false" />

        <!-- VARBINARY indica il MEDIUMBLOB di mysql-->
        <!-- in caso di errore ricordarsi di impostare l'opzione max_allowed_packet=16M in mysql.ini -->
        <!-- <column name="image" phpName="Image" type="VARBINARY" required="false" /> -->

        <behavior name="validate">
            <parameter name="name" value="{column: name, validator: NotBlank}" />
            <parameter name="genre" value="{column: genre, validator: PropelFoowd, options: {type: enum, list:'standard, offerente'}}" />
            <parameter name="external" value="{column: externalid, validator: PropelFoowd, options: {type: integer}}" />
            <!-- <parameter name="rule1" value="{column: externalid, validator: Integer}" /> -->
        </behavior>
    </table>
</database>
