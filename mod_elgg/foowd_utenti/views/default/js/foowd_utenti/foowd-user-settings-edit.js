// Generated by CoffeeScript 1.10.0
(function() {
  var indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  (function(root, factory) {
    if (typeof define === 'function' && define.amd) {
      return define(['elgg', 'jquery', 'foowdFormCheck'], factory);
    } else if (typeof exports === 'object') {
      return module.exports = factory();
    } else {
      return root.returnExports = factory();
    }
  })(this, function() {
    var $, Jgenre, Jhook, JmailLabel, advise, ajaxCheck, ar, checkGenre, elgg, fct, flds, form, genre, i, len, needAr, noNeedAr, setNeed, va;
    elgg = require('elgg');
    $ = require('jquery');
    $('.elgg-form-usersettings-save').fadeIn('slow');
    $('.elgg-body').each(function() {
      var html, mod;
      html = $(this).html();
      mod = $(this).closest('.elgg-module');
      $(html).insertAfter(mod);
      return mod.remove();
    });
    $('<label for="name">Username</label>').insertBefore($('input[name="name"]').attr('disabled', true));
    $('[for="name"], [name="name"]').wrapAll('<div></div>');
    $('<label for="email">Email</label>').insertBefore($('input[name="email"]'));
    $('[for="email"], [name="email"]').wrapAll('<div></div>');
    $('p input[name*="password"]').closest('p').css('display', 'none');
    $('select[name="language"]').css({
      'display': 'none'
    });
    $('input[name="method[email]"]').closest('table').css({
      'display': 'none'
    });
    genre = $('[name="js_admin"]').val() === 'amministratore';
    console.log(genre);
    if (genre) {
      advise = $('<div/>').insertAfter($('.elgg-breadcrumbs'));
      advise.html('Salve amministratore, ti ricordo che stai modificando la pagina di un utente.').addClass('foowd-user-settings-admin');
    }
    if ($('[name="Genre"]').val() === 'evaluating') {
      advise = $('<div/>').insertAfter($('.elgg-breadcrumbs'));
      advise.html('La tua richiesta &egrave; in fase di approvazione. <br/>Di seguito puoi visionare i dati che hai inserito:').addClass('foowd-user-settings-admin-evaluating');
    }
    form = require('foowdFormCheck');
    Jhook = $('#offer-hook');
    Jgenre = $('[name="Genre"]');
    fct = form.factory();
    ar = [];
    flds = ['Email', 'username', 'name', 'password'];
    for (i = 0, len = flds.length; i < len; i++) {
      va = flds[i];
      JmailLabel = $('[name="' + va + '"]').prevUntil('', 'label');
      JmailLabel.attr({
        'for': va
      });
    }
    ajaxCheck = function() {
      var url, v;
      v = this.el.val().trim();
      url = elgg.get_site_url() + 'foowd_utility/user-check?foowd-dati=true&guid=' + elgg.get_logged_in_user_guid() + '&' + this.key + '=' + v;
      console.log(v);
      return elgg.get(url, {
        success: (function(_this) {
          return function(resultText, success, xhr) {
            var obj, ret;
            console.log(resultText);
            obj = JSON.parse(resultText);
            if (typeof obj === 'object') {
              ret = obj[_this.key];
            } else {
              ret = false;
            }
            if (ret) {
              _this.error('Qesto valore e\' gia\' utilizzato. Prova con un altro');
              ret = false;
            } else {
              ret = true;
            }
            return _this.status = ret;
          };
        })(this)
      });
    };
    ar.push({
      cls: 'Phone',
      obj: {
        inpt: 'form.elgg-form-usersettings-save [name="Phone"]',
        key: 'Phone',
        el: 'form.elgg-form-usersettings-save [name="Phone"]',
        msg: 'foowd:user:phone:error'
      }
    });
    ar.push({
      cls: 'WebDomain',
      obj: {
        inpt: 'form.elgg-form-usersettings-save [name="Site"]',
        key: 'Site',
        el: 'form.elgg-form-usersettings-save [name="Site"]',
        msg: 'foowd:user:site:error'
      }
    });
    ar.push({
      cls: 'Piva',
      obj: {
        inpt: 'form.elgg-form-usersettings-save [name="Piva"]',
        key: 'Piva',
        el: 'form.elgg-form-usersettings-save [name="Piva"]',
        msg: 'foowd:user:piva:error'
      }
    });
    ar.push({
      cls: 'Text',
      obj: {
        inpt: 'form.elgg-form-usersettings-save [name="Address"]',
        key: 'Address',
        el: 'form.elgg-form-usersettings-save [name="Address"]',
        msg: 'foowd:user:address:error'
      }
    });
    ar.push({
      cls: 'Text',
      obj: {
        inpt: 'form.elgg-form-usersettings-save [name="Company"]',
        key: 'Company',
        el: 'form.elgg-form-usersettings-save [name="Company"]',
        msg: 'foowd:user:company:error'
      }
    });
    ar.push({
      cls: 'Text',
      obj: {
        inpt: 'form.elgg-form-usersettings-save [name="Owner"]',
        key: 'Owner',
        el: 'form.elgg-form-usersettings-save [name="Owner"]',
        msg: 'foowd:user:owner:error'
      }
    });
    fct.pushFromArray(ar);
    needAr = ['Piva', 'Phone', 'Location', 'Address', 'Company', 'Owner'];
    noNeedAr = ['Site'];
    setNeed = function(bool) {
      return fct.each(function() {
        var ref, ref1;
        if ((ref = this.key, indexOf.call(needAr, ref) >= 0)) {
          this.needle = true;
        } else if ((ref1 = this.key, indexOf.call(noNeedAr, ref1) >= 0)) {
          this.needle = false;
        } else {
          this.needle = bool;
        }
      });
    };
    setNeed(false);
    form.submit('form.elgg-form-usersettings-save');
    if ($('[name="js_admin"]').val() === 'amministratore' || Jgenre.val() !== 'standard') {
      setNeed(true);
    } else {
      Jhook.css({
        'display': 'none'
      });
      setNeed(false);
      $('#offer-hook').find('[type="text"]').each(function() {
        this.val('');
        return $(this).attr('disabled', true);
      });
    }
    return checkGenre = function() {
      if (this.val() === 'offerente') {

      } else {
        return setNeed(false);
      }
    };
  });

}).call(this);
