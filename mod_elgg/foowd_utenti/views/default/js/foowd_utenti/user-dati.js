// Generated by CoffeeScript 1.9.3
var indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    return define(['elgg', 'jquery', 'foowdFormCheck'], factory);
  } else if (typeof exports === 'object') {
    return module.exports = factory();
  } else {
    return root.returnExports = factory();
  }
})(this, function() {
  var $, Jgenre, Jhook, JmailLabel, ajaxCheck, ar, checkGenre, elgg, fct, flds, form, i, len, needAr, noNeedAr, setNeed, va;
  elgg = require('elgg');
  $ = require('jquery');
  form = require('foowdFormCheck');
  Jhook = $('#offer-hook');
  Jgenre = $('[name=Genre]');
  fct = form.factory();
  ar = [];
  flds = ['Email', 'username', 'name', 'password'];
  for (i = 0, len = flds.length; i < len; i++) {
    va = flds[i];
    JmailLabel = $('[name="' + va + '"]').prevUntil('', 'label');
    JmailLabel.attr({
      'for': va
    });
  }
  ajaxCheck = function() {
    var url, v;
    v = this.el.val().trim();
    url = elgg.get_site_url() + 'foowd_utility/user-check?foowd-dati=true&guid=' + elgg.get_logged_in_user_guid() + '&' + this.key + '=' + v;
    console.log(v);
    return elgg.get(url, {
      success: (function(_this) {
        return function(resultText, success, xhr) {
          var obj, ret;
          console.log(resultText);
          obj = JSON.parse(resultText);
          if (typeof obj === 'object') {
            ret = obj[_this.key];
          } else {
            ret = false;
          }
          if (ret) {
            _this.error('Qesto valore e\' gia\' utilizzato. Prova con un altro');
            ret = false;
          } else {
            ret = true;
          }
          return _this.status = ret;
        };
      })(this)
    });
  };
  ar.push({
    cls: 'Phone',
    obj: {
      inpt: 'form.elgg-form-foowd-dati [name="Phone"]',
      key: 'Phone',
      el: 'form.elgg-form-foowd-dati [name="Phone"]',
      msg: 'foowd:user:phone:error'
    }
  });
  ar.push({
    cls: 'WebDomain',
    obj: {
      inpt: 'form.elgg-form-foowd-dati [name="Site"]',
      key: 'Site',
      el: 'form.elgg-form-foowd-dati [name="Site"]',
      msg: 'foowd:user:site:error'
    }
  });
  ar.push({
    cls: 'Piva',
    obj: {
      inpt: 'form.elgg-form-foowd-dati [name="Piva"]',
      key: 'Piva',
      el: 'form.elgg-form-foowd-dati [name="Piva"]',
      msg: 'foowd:user:piva:error'
    }
  });
  ar.push({
    cls: 'Text',
    obj: {
      inpt: 'form.elgg-form-foowd-dati [name="Address"]',
      key: 'Address',
      el: 'form.elgg-form-foowd-dati [name="Address"]',
      msg: 'foowd:user:address:error'
    }
  });
  ar.push({
    cls: 'Text',
    obj: {
      inpt: 'form.elgg-form-foowd-dati [name="Company"]',
      key: 'Company',
      el: 'form.elgg-form-foowd-dati [name="Company"]',
      msg: 'foowd:user:company:error'
    }
  });
  fct.pushFromArray(ar);
  needAr = ['Piva', 'Phone', 'Location', 'Address', 'company'];
  noNeedAr = ['Site'];
  setNeed = function(bool) {
    return fct.each(function() {
      var ref, ref1;
      if ((ref = this.key, indexOf.call(needAr, ref) >= 0)) {
        this.needle = true;
      } else if ((ref1 = this.key, indexOf.call(noNeedAr, ref1) >= 0)) {
        this.needle = false;
      } else {
        this.needle = bool;
      }
    });
  };
  setNeed(false);
  $('.mtm').css({
    'display': 'none'
  });
  form.submit('form.elgg-form-foowd-dati');
  checkGenre = function() {
    if (this.val() === 'offerente') {
      Jhook.fadeIn('slow');
      return setNeed(true);
    } else {
      Jhook.fadeOut('slow');
      setNeed(false);
      return $('#offer-hook').find('[type="text"]').each(function() {
        return this.val('');
      });
    }
  };
  checkGenre.call(Jgenre);
  return Jgenre.on("change", function() {
    return checkGenre.call($(this));
  });
});
